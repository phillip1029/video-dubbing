# src/utils/languages.py

# This mapping is based on the languages supported by OpenAI's Whisper model.
# The keys are the lowercase language names returned by the API's verbose_json response.
# The values are the corresponding ISO-639-1 codes required for the 'language' parameter.

LANGUAGE_NAME_TO_CODE_MAPPING = {
    'afrikaans': 'af',
    'albanian': 'sq',
    'amharic': 'am',
    'arabic': 'ar',
    'armenian': 'hy',
    'assamese': 'as',
    'azerbaijani': 'az',
    'bashkir': 'ba',
    'basque': 'eu',
    'belarusian': 'be',
    'bengali': 'bn',
    'bosnian': 'bs',
    'breton': 'br',
    'bulgarian': 'bg',
    'burmese': 'my',
    'catalan': 'ca',
    'chinese': 'zh',
    'croatian': 'hr',
    'czech': 'cs',
    'danish': 'da',
    'dutch': 'nl',
    'english': 'en',
    'estonian': 'et',
    'faroese': 'fo',
    'finnish': 'fi',
    'flemish': 'nl',
    'french': 'fr',
    'galician': 'gl',
    'georgian': 'ka',
    'german': 'de',
    'greek': 'el',
    'gujarati': 'gu',
    'haitian': 'ht',
    'haitian creole': 'ht',
    'hausa': 'ha',
    'hawaiian': 'haw',
    'hebrew': 'he',
    'hindi': 'hi',
    'hungarian': 'hu',
    'icelandic': 'is',
    'indonesian': 'id',
    'italian': 'it',
    'japanese': 'ja',
    'javanese': 'jw',
    'kannada': 'kn',
    'kazakh': 'kk',
    'khmer': 'km',
    'korean': 'ko',
    'lao': 'lo',
    'latin': 'la',
    'latvian': 'lv',
    'lingala': 'ln',
    'lithuanian': 'lt',
    'luxembourgish': 'lb',
    'macedonian': 'mk',
    'malagasy': 'mg',
    'malay': 'ms',
    'malayalam': 'ml',
    'maltese': 'mt',
    'maori': 'mi',
    'marathi': 'mr',
    'moldavian': 'ro',
    'moldovan': 'ro',
    'mongolian': 'mn',
    'myanmar': 'my',
    'nepali': 'ne',
    'norwegian': 'no',
    'nynorsk': 'nn',
    'occitan': 'oc',
    'pashto': 'ps',
    'persian': 'fa',
    'polish': 'pl',
    'portuguese': 'pt',
    'punjabi': 'pa',
    'pushto': 'ps',
    'romanian': 'ro',
    'russian': 'ru',
    'sanskrit': 'sa',
    'serbian': 'sr',
    'shona': 'sn',
    'sindhi': 'sd',
    'sinhala': 'si',
    'sinhalese': 'si',
    'slovak': 'sk',
    'slovenian': 'sl',
    'somali': 'so',
    'spanish': 'es',
    'sundanese': 'su',
    'swahili': 'sw',
    'swedish': 'sv',
    'tagalog': 'tl',
    'tajik': 'tg',
    'tamil': 'ta',
    'tatar': 'tt',
    'telugu': 'te',
    'thai': 'th',
    'tibetan': 'bo',
    'turkish': 'tr',
    'turkmen': 'tk',
    'ukrainian': 'uk',
    'urdu': 'ur',
    'uzbek': 'uz',
    'valencian': 'ca',
    'vietnamese': 'vi',
    'welsh': 'cy',
    'yiddish': 'yi',
    'yoruba': 'yo',
}

def get_language_code(language_name: str) -> str:
    """
    Converts a language name (e.g., 'english') to its ISO-639-1 code (e.g., 'en').
    If the name is not found, it returns the original string, assuming it might already be a code.
    """
    if not language_name or not isinstance(language_name, str):
        return 'en'  # Default to English if input is invalid
    
    cleaned_name = language_name.lower().strip()
    return LANGUAGE_NAME_TO_CODE_MAPPING.get(cleaned_name, cleaned_name)
